# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: docker push
      run: |
        ${{ secrets.HUAWEI_DOCKERLOGIN }}
        docker build . -t ${{ secrets.HUAWEI_DOCKERREPOSITORY }}
        docker push ${{ secrets.HUAWEI_DOCKERREPOSITORY }}
#  deploy:
#    needs: [build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HUAWEI_HOST }}
#          username: ${{secrets.HUAWEI_USERNAME}}
#          password: ${{secrets.HUAWEI_PASSWORD}}
#          script: |
#            ${{ secrets.HUAWEI_DOCKERLOGIN }}
#            docker stop $(docker ps --filter ancestor=${{ secrets.HUAWEI_DOCKERREPOSITORY }} -q)
#            docker rm -v $(docker ps --filter ancestor=${{ secrets.HUAWEI_DOCKERREPOSITORY }} -q)
#            docker rmi -f $(docker images ${{ secrets.HUAWEI_DOCKERREPOSITORY }} -q)
#            docker pull ${{ secrets.HUAWEI_DOCKERREPOSITORY }}
#            docker run -p 8080:8080 -d ${{ secrets.HUAWEI_DOCKERREPOSITORY }}

